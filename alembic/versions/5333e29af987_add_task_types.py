from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '5333e29af987'
down_revision = 'f65610b7a62a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop foreign key constraints that depend on 'quizzes'
    op.drop_constraint('multiple_select_quizzes_id_fkey', 'multiple_select_quizzes', type_='foreignkey')
    op.drop_constraint('true_false_quizzes_id_fkey', 'true_false_quizzes', type_='foreignkey')

    # Drop the dependent tables first
    op.drop_table('multiple_select_quizzes')
    op.drop_table('true_false_quizzes')

    # Drop the 'quizzes' table
    op.drop_table('quizzes')

    # Add new 'tasks' columns and foreign keys
    op.add_column('tasks', sa.Column('task_name', sa.String(), nullable=False))
    op.add_column('tasks', sa.Column('task_link', sa.String(), nullable=False))
    op.add_column('tasks', sa.Column('points', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('order', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('data', sa.JSON(), nullable=False))
    op.add_column('tasks', sa.Column('topic_id', sa.Integer(), nullable=False))

    op.create_index(op.f('ix_tasks_task_link'), 'tasks', ['task_link'], unique=False)
    op.create_foreign_key(None, 'tasks', 'topics', ['topic_id'], ['id'])

    # Drop old columns
    op.drop_column('tasks', 'description')
    op.drop_column('tasks', 'title')

    # Recreate the 'multiple_select_quizzes' table
    op.create_table(
        'multiple_select_quizzes',
        sa.Column('id', sa.Integer, nullable=False),
        sa.ForeignKeyConstraint(['id'], ['tasks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Recreate the 'true_false_quizzes' table
    op.create_table(
        'true_false_quizzes',
        sa.Column('id', sa.Integer, nullable=False),
        sa.ForeignKeyConstraint(['id'], ['tasks.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # Create new table for single-question tasks
    op.create_table(
        'single_question_tasks',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['id'], ['tasks.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the new constraints and columns in reverse order
    op.drop_constraint(None, 'true_false_quizzes', type_='foreignkey')
    op.drop_constraint(None, 'multiple_select_quizzes', type_='foreignkey')

    # Drop added columns and indexes
    op.drop_index(op.f('ix_tasks_task_link'), table_name='tasks')
    op.drop_column('tasks', 'topic_id')
    op.drop_column('tasks', 'data')
    op.drop_column('tasks', 'order')
    op.drop_column('tasks', 'points')
    op.drop_column('tasks', 'task_link')
    op.drop_column('tasks', 'task_name')

    # Drop newly created tables
    op.drop_table('single_question_tasks')
    op.drop_table('multiple_select_quizzes')
    op.drop_table('true_false_quizzes')

    # Recreate the old 'quizzes' table
    op.create_table(
        'quizzes',
        sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('quiz_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['id'], ['tasks.id'], name='quizzes_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='quizzes_pkey')
    )

    # Recreate the foreign key relationships with 'quizzes'
    op.create_foreign_key('multiple_select_quizzes_id_fkey', 'multiple_select_quizzes', 'quizzes', ['id'], ['id'])
    op.create_foreign_key('true_false_quizzes_id_fkey', 'true_false_quizzes', 'quizzes', ['id'], ['id'])

    # Add back the old columns to tasks
    op.add_column('tasks', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
