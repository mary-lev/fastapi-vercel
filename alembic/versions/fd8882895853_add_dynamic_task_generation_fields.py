"""Add dynamic task generation fields

Revision ID: fd8882895853
Revises: caab59d83def
Create Date: 2025-08-17 13:57:36.431773

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "fd8882895853"
down_revision: Union[str, None] = "caab59d83def"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "task_generation_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("source_task_attempt_id", sa.Integer(), nullable=False),
        sa.Column("topic_id", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("error_analysis", sa.JSON(), nullable=True),
        sa.Column("generated_task_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["generated_task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["source_task_attempt_id"],
            ["task_attempts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"],
            ["topics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_generation_requests_created_at", "task_generation_requests", ["created_at"], unique=False)
    op.create_index(
        "idx_generation_requests_user_status", "task_generation_requests", ["user_id", "status"], unique=False
    )
    op.create_index(op.f("ix_task_generation_requests_id"), "task_generation_requests", ["id"], unique=False)
    # Add columns with default values for existing data
    op.add_column("task_solutions", sa.Column("is_correct", sa.Boolean(), nullable=True))
    op.add_column("task_solutions", sa.Column("points_earned", sa.Integer(), nullable=True))
    op.add_column("tasks", sa.Column("is_generated", sa.Boolean(), nullable=True))

    # Update existing records with default values
    op.execute("UPDATE task_solutions SET is_correct = true WHERE is_correct IS NULL")
    op.execute("UPDATE tasks SET is_generated = false WHERE is_generated IS NULL")

    # Now make the columns NOT NULL
    op.alter_column("task_solutions", "is_correct", nullable=False)
    op.alter_column("tasks", "is_generated", nullable=False)
    op.add_column("tasks", sa.Column("generated_for_user_id", sa.Integer(), nullable=True))
    op.add_column("tasks", sa.Column("source_task_id", sa.Integer(), nullable=True))
    op.add_column("tasks", sa.Column("generation_prompt", sa.Text(), nullable=True))
    op.add_column("tasks", sa.Column("ai_model_used", sa.String(length=50), nullable=True))
    op.create_foreign_key(None, "tasks", "tasks", ["source_task_id"], ["id"])
    op.create_foreign_key(None, "tasks", "users", ["generated_for_user_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.drop_constraint(None, "tasks", type_="foreignkey")
    op.drop_column("tasks", "ai_model_used")
    op.drop_column("tasks", "generation_prompt")
    op.drop_column("tasks", "source_task_id")
    op.drop_column("tasks", "generated_for_user_id")
    op.drop_column("tasks", "is_generated")
    op.drop_column("task_solutions", "points_earned")
    op.drop_column("task_solutions", "is_correct")
    op.drop_index(op.f("ix_task_generation_requests_id"), table_name="task_generation_requests")
    op.drop_index("idx_generation_requests_user_status", table_name="task_generation_requests")
    op.drop_index("idx_generation_requests_created_at", table_name="task_generation_requests")
    op.drop_table("task_generation_requests")
    # ### end Alembic commands ###
